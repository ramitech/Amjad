@model Amjad.Models.Video

@{
}
<div class="row">
	<div class="col-md-12">
		<div class="portlet box green ">
			<div class="portlet-title">
				<div class="caption">
					<i class="fa fa-gift"></i> تعديل
				</div>
			</div>
			<div class="portlet-body">
				<div class="table-toolbar">
					<div class="row">
						<div class="col-md-6">
							<div class="btn-group">
								<a class="btn green" href="@Url.Action("Index")">
									<i class='fa fa-undo'></i> الرجوع
								</a>
							</div>
						</div>
					</div>
				</div>
				@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", @role = "form", action = "" }))
				{
					@Html.AntiForgeryToken()
							@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-body">
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.Date)
                @Html.HiddenFor(model => model.UserIdAdd)
                @Html.HiddenFor(model => model.UserIdUpdate)
                @Html.HiddenFor(model => model.UserIdDelete)
                @Html.HiddenFor(model => model.IsBest)
                @Html.HiddenFor(model => model.IsDeleted)
                @Html.HiddenFor(model => model.Views)
                @Html.HiddenFor(model => model.LangId)
                @Html.HiddenFor(model => model.VideoName)
                @Html.HiddenFor(model => model.ImageName)
                @Html.HiddenFor(model => model.CatId)

                @*<div class="form-group">
            @Html.LabelFor(model => model.CatId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CatId", null, htmlAttributes: new { @class = "form-control input-sm select2" })
                @Html.ValidationMessageFor(model => model.CatId, "", new { @class = "text-danger" })
            </div>
        </div>*@


                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VideoName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (!string.IsNullOrEmpty(Model.VideoName))
                        {
                            <embed width="420" height="320" src="https://www.youtube.com/v/@Model.VideoName" />
                        }
                        @Html.EditorFor(model => model.VideoName, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="help-block">https://www.youtube.com/v/ <b>j52grXrd-i4<b></span>
                        @Html.ValidationMessageFor(model => model.VideoName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Summary, new { @class = "form-control", @rows = 5 })
                        @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                    </div>
                </div>




            </div>
					<div class="form-actions">
						<div class="row">
							<div class="col-md-offset-2 col-md-10">
								<input type="submit" class="btn green" value="حفظ التغيرات" />
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>
@section jsCode {
    @Scripts.Render("~/bundles/jqueryval")
}
